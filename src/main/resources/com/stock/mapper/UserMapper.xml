<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stock.mapper.UserMapper">

	<resultMap type="com.stock.domain.UserVo" id="UserVo">
		<result column="user_id" property="userId"/>
		<result column="user_pw" property="userPw"/>
		<result column="user_name" property="userNm"/>
		<result column="user_phone" property="userPhone"/>
		<result column="user_email" property="userEmail"/>
		<result column="user_address_zip_code" property="addressZipCode"/>
		<result column="user_address_road_name" property="addressRoadName"/>
		<result column="user_address_detailed" property="addressDetailed"/>
	</resultMap>

	<select id ="userIdCheck" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM NOTICES_USER WHERE USER_ID = #{userId}

	/* ID중복체크 */
	</select>

	<select id ="EmailCheck" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM NOTICES_USER WHERE USER_EMAIL = #{email}

	/* Email 중복체크 */
	</select>

	<insert id="userCreate" parameterType="com.stock.domain.UserVo">
	INSERT INTO NOTICES_USER(USER_ID, USER_PW, USER_NAME, USER_PHONE, USER_ADDRESS_ZIP_CODE, USER_ADDRESS_ROAD_NAME, USER_ADDRESS_DETAILED, USER_EMAIL, USER_IP)
	VALUES (#{userId}, #{userPw}, #{userNm},#{userPhone}, #{addressZipCode}, #{addressRoadName}, #{addressDetailed}, #{userEmail}, #{userIp})
	
	/* 회원가입 */
	</insert>
	
	<select id="userLogin" parameterType="com.stock.domain.UserVo" resultType="int">
	   SELECT COUNT(*) FROM NOTICES_USER WHERE USER_ID=#{userId}AND USER_PW = #{userPw}

	/* 로그인 */	
	</select>
	
	<select id="userPwCheck" resultType="String" parameterType="String">
	    SELECT USER_PW FROM NOTICES_USER WHERE USER_ID = #{userId}
	    
	/* 유저 hashPW @@밑에거랑 합쳐서 리팩토링 할수있을거같은데?*/    
	</select>
	
	<select id="userMyPage" parameterType="String" resultMap="UserVo">
		SELECT USER_ID,USER_NAME,USER_PHONE,USER_ADDRESS_ZIP_CODE,USER_ADDRESS_ROAD_NAME,USER_ADDRESS_DETAILED,USER_EMAIL 
		FROM NOTICES_USER WHERE USER_ID = #{userId} or USER_Nick = #{userId}
	/* 마이페이지 정보 출력 */
	</select>	
	
	<update id="userUpdate" parameterType="com.stock.domain.UserVo">
		update notices_user 
		set user_name = #{userNm},user_phone = #{userPhone} ,user_address_zip_code=#{addressZipCode}, user_address_road_name = #{addressRoadName}, user_address_detailed = #{addressDetailed}, user_email = #{userEmail} 
		where user_id = #{userId}
	/* 마이페이지 정보수정 */
	</update>
	
	<update id="userPwChange" parameterType="String">
		UPDATE NOTICES_USER 
		SET USER_PW = #{newUserPw} 
		WHERE USER_ID = #{userId}
	/* 비밀번호 수정 */
	</update>
	
	<insert id="realUserWithdrawal" parameterType="String">
	INSERT INTO NOTCIES_USER_WITHDRAWL(USER_ID)
	VALUES(#{userId})
	/* 회원탈퇴 등록*/
	</insert>
	
	<select id="userWithdrawalReg" parameterType="String" resultType="com.stock.domain.UserVo">
	SELECT USER_ID AS USERID ,USER_REG_WITHDRAWAL AS USERREGWITHDRAWAL FROM NOTCIES_USER_WITHDRAWL WHERE USER_ID=#{userId}
	/* 회원탈퇴 날짜 */
	</select>
	
	<delete id="userWithrawalCancel" parameterType="String">
	DELETE FROM NOTCIES_USER_WITHDRAWL WHERE USER_ID = #{userId}
	/* 회원탈퇴 철회 */
	</delete>
	
	<select id="userWithrawalList" resultType="com.stock.domain.UserVo">
	<![CDATA[
	SELECT USER_ID AS USERID FROM NOTCIES_USER_WITHDRAWL
	WHERE USER_REG_WITHDRAWAL <= TO_CHAR(SYSDATE-7,'YYYYMMDD')
	]]>
	/* 현재날짜로부터 7일 전의 데이터를 가져옴 */
	</select>
	
	<delete id="userRemove" parameterType="String">
		DELETE FROM notices_user WHERE USER_ID = #{userId}
	/* 유저 계정 삭제 */
	</delete>
	
	
	<insert id="userKakao" parameterType="com.stock.domain.UserVo">
	insert into NOTICES_USER(user_id, user_nick, user_email, provider)
	values(#{userId}, #{userNick}, #{userEmail}, #{proVider})
	/* 카카오 계정 회원가입 */
	</insert>
	
	<insert id="userNaver" parameterType="com.stock.domain.UserVo">
	insert into NOTICES_USER(user_id, user_nick, user_email,user_phone, provider)
	values(#{userId}, #{userNick}, #{userEmail}, #{userNm}, #{proVider})
	/* 네이버 계정 회원가입 */
	</insert>
	
	<insert id="userGoogle" parameterType="com.stock.domain.UserVo">
	insert into NOTICES_USER(user_id, user_nick, user_email,user_phone, provider)
	values(#{userId}, #{userNick}, #{userEmail}, #{userNm}, #{proVider})
	/* 구글 계정 회원가입 */
	</insert>
	
	<update id="keepLogin" parameterType="java.util.HashMap">
	update notices_user 
    set session_key = #{sessionId}, session_limit = #{sessionLimit} where user_id =#{userId}
    /* 로그인기억하기 */
	</update>

	<select id="checkLoginBefore" resultType="com.stock.domain.UserVo" parameterType="String">
		<![CDATA[
	    select user_id as userid from notices_user where session_key = #{cookieValue} and session_limit > (SELECT SYSDATE FROM DUAL)
		]]>
		/* 쿠키가 있는지 검색 */
	</select>
	
</mapper>